---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import ProjectCard from "@/components/project/ProjectCard.astro";
import FeaturedCard from "@/components/project/FeaturedCard.astro";
import Bar from "@/assets/barcode.svg";

const project_collection = await getCollection("projects").then((entries) =>
  entries.filter((entry) => !entry.data.draft)
);

// Featured project
const featured = project_collection.find((p) => p.data.featured);
const projects = featured
  ? project_collection.filter((p) => p.id !== featured.id)
  : project_collection;

// Sort by pub/mod date
projects.sort((a, b) => {
  const aDate = new Date(a.data.modDatetime ?? a.data.pubDatetime).valueOf();
  const bDate = new Date(b.data.modDatetime ?? b.data.pubDatetime).valueOf();
  return bDate - aDate;
});
---

<BaseLayout>
  <div class="flex w-full flex-1 flex-col md:max-w-4xl lg:max-w-6xl">
    <div class="flex w-full flex-col-reverse gap-8 px-6 lg:flex-row">
      <!-- Left side (scrolls) -->
      <div class="flex w-full flex-col lg:pt-12">
        <!-- Title and barcode -->
        <div
          class="border-border flex flex-row justify-between border-b px-4 pb-12"
        >
          <h1
            class="text-text-default text-3xl"
            transition:name="projects-title"
          >
            Projects
          </h1>
          <div class="flex items-center justify-center">
            <Bar />
          </div>
        </div>
        <!-- Projects -->
        <div class="flex flex-col gap-8 py-4">
          {projects.map((project) => <ProjectCard project={project} />)}
        </div>
      </div>

      <!-- Right side (featured sticky) -->
      <div
        class="flex w-full grow self-start pt-8 pb-12 lg:sticky lg:top-28 lg:h-[calc(100dvh-7rem)]"
        transition:name="right-project"
      >
        {featured && <FeaturedCard project={featured} />}
      </div>
    </div>
  </div>
</BaseLayout>
