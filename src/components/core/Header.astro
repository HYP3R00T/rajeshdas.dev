---
interface NavItem {
  href: string;
  label: string;
  special?: boolean;
}

const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);

const navItems: NavItem[] = [
  { href: "/about", label: "About" },
  { href: "/post", label: "Posts" },
  { href: "/project", label: "Projects" },
  { href: "/contact", label: "Ping Me", special: true },
];

const { transparent_header = false } = Astro.props;
---

<header
  class={`sticky top-0 z-50 mx-auto flex w-full flex-row items-center justify-between px-8 py-8 ${transparent_header ? "bg-transparent" : "bg-background"}`}
>
  <!-- Logo -->
  <div class="flex">
    <a href="/" class="flex h-12 w-32 items-center justify-center">
      <h1 class="text-2xl">Logo</h1>
    </a>
  </div>

  <!-- Navigation -->
  <nav class="gator bg-content hidden w-auto flex-row justify-center lg:flex">
    {
      navItems.map((item, index) => (
        <div
          class={`group flex h-full w-auto items-center justify-center ${
            item.special
              ? ""
              : "border-border border-r nth-last-[2]:border-none"
          }`}
        >
          <a
            href={item.href}
            class={`relative flex h-full w-full items-center justify-center overflow-hidden px-6 py-2 ${
              item.special
                ? "bg-cyan text-background hover:bg-cyan/90 font-bold transition-colors duration-300"
                : `${
                    currentPath.startsWith(item.href.slice(1))
                      ? "bg-elevated"
                      : ""
                  } text-text-default font-medium`
            } before:bg-elevated before:absolute before:inset-0 before:-z-10 before:origin-right before:scale-x-0 before:transition-transform before:duration-300 before:ease-in-out hover:before:origin-left hover:before:scale-x-100`}
          >
            {item.label}
          </a>
        </div>
      ))
    }
  </nav>
</header>
