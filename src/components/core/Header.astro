---
import { Icon } from "astro-icon/components";
import Button from "@/components/ui/Button.astro";
import { navItems, Socials } from "config";

const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);

const { transparent_header = false } = Astro.props;
---

<header
  class={`sticky top-0 z-50 mx-auto flex w-full flex-row lg:items-center justify-between px-8 py-8 ${transparent_header ? "bg-transparent" : "bg-background"}`}
>
  <!-- Logo -->
  <div class="z-30 flex">
    <a href="/" class="flex items-center justify-center lg:h-12 lg:w-32">
      <h1 class="text-2xl">Logo</h1>
    </a>
  </div>

  <!-- Desktop Navigation -->
  <nav class="gator bg-content hidden w-auto flex-row justify-center lg:flex">
    {
      navItems.map((item) => (
        <div
          class={`group flex h-full w-auto items-center justify-center ${
            item.special
              ? ""
              : "border-border border-r nth-last-[2]:border-none"
          }`}
        >
          <a
            href={item.href}
            class={`relative flex h-full w-full items-center justify-center overflow-hidden px-6 py-2 ${
              item.special
                ? "bg-cyan text-background hover:bg-cyan/90 font-bold transition-colors duration-300"
                : `${
                    currentPath.startsWith(item.href.slice(1))
                      ? "bg-elevated"
                      : ""
                  } text-text-default font-medium`
            } before:bg-elevated before:absolute before:inset-0 before:-z-10 before:origin-right before:scale-x-0 before:transition-transform before:duration-300 before:ease-in-out hover:before:origin-left hover:before:scale-x-100`}
          >
            {item.label}
          </a>
        </div>
      ))
    }
  </nav>

  <!-- Mobile Hamburger -->
  <div class="relative flex items-center justify-end lg:hidden">
    <!-- Menu Button -->
    <Button
      class="text-text-default z-30 flex p-4"
      aria-label="Open menu"
      size="icon"
      id="menu"
    >
      <Icon name="menu" class="h-[1.2rem] w-[1.2rem]" />
    </Button>

    <!-- Close Button -->
    <Button
      class="text-text-default z-30 hidden! p-4"
      aria-label="Close menu"
      size="icon"
      id="close"
    >
      <Icon name="close" class="h-[1.2rem] w-[1.2rem]" />
    </Button>

    <!-- Mobile Menu -->
    <nav
      id="menuPopup"
      class="bg-background fixed inset-0 z-20 mt-28 hidden flex-col items-center justify-between gap-4 px-8"
    >
      <!-- Nav Items -->
      <div class="flex w-full flex-col items-center">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class={`text-xl ${
                item.special
                  ? "bg-cyan text-background font-bold"
                  : `${currentPath.startsWith(item.href.slice(1)) ? "bg-elevated" : ""} text-text-default font-medium`
              } gator w-full px-6 py-4`}
            >
              {item.label}
            </a>
          ))
        }
      </div>
      <!-- Social -->
      <div class="mb-16 flex flex-row gap-4">
        {
          Socials.filter((social) => social.active).map((social) => (
            <a href={social.href} target="_blank" class="">
              <Button variant="default" size="icon" class="h-12! w-12!">
                <Icon name={social.name} class="h-[1.4rem] w-[1.4rem]" />
              </Button>
            </a>
          ))
        }
      </div>
    </nav>
  </div>
</header>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const menuButton = document.getElementById("menu");
    const closeButton = document.getElementById("close");
    const menuPopup = document.getElementById("menuPopup");

    function toggleMenu() {
      const isOpen = !menuPopup.classList.contains("hidden");

      if (isOpen) {
        // Close menu
        menuButton.classList.remove("hidden!");
        closeButton.classList.add("hidden!");
        menuPopup.classList.add("hidden");
      } else {
        // Open menu
        menuButton.classList.add("hidden!");
        closeButton.classList.remove("hidden!");
        menuPopup.classList.remove("hidden");
        menuPopup.classList.add("flex");
      }
    }

    menuButton?.addEventListener("click", toggleMenu);
    closeButton?.addEventListener("click", toggleMenu);
  });
</script>

<!-- <script is:inline>
  document.addEventListener("astro:page-load", () => {
    const menuToggle = document.getElementById("menuToggle");
    const menuPopup = document.getElementById("menuPopup");
    const plusIcon = menuToggle?.querySelector("svg");
    let lastScrollPosition = 0;

    function toggleMenu() {
      if (menuPopup && menuToggle && plusIcon) {
        const isOpen = menuPopup.classList.contains("opacity-100");

        if (isOpen) {
          // Close menu
          menuPopup.classList.remove("opacity-100", "pointer-events-auto");
          menuPopup.classList.add("opacity-0", "pointer-events-none");
          plusIcon.style.transform = "rotate(0deg)";
        } else {
          // Open menu
          menuPopup.classList.add("opacity-100", "pointer-events-auto");
          menuPopup.classList.remove("opacity-0", "pointer-events-none");
          plusIcon.style.transform = "rotate(45deg)";
        }
      }
    }

    function hideMenuOnScroll() {
      const currentScrollPosition = window.scrollY;

      if (
        currentScrollPosition > 50 &&
        menuPopup?.classList.contains("opacity-100")
      ) {
        menuPopup.classList.remove("opacity-100", "pointer-events-auto");
        menuPopup.classList.add("opacity-0", "pointer-events-none");
        if (plusIcon) {
          plusIcon.style.transform = "rotate(0deg)";
        }
      }

      lastScrollPosition = currentScrollPosition;
    }

    // Show the menu
    menuToggle?.addEventListener("click", toggleMenu);

    // Hide the menu on scroll
    window.addEventListener("scroll", hideMenuOnScroll);
  });
</script> -->

<!-- <script is:inline>
  let menuOpen = false;
  function toggleMenu() {
    menuOpen = !menuOpen;
    const menu = document.getElementById("mobile-menu");
    if (menu) menu.style.display = menuOpen ? "flex" : "none";
  }
  function closeMenu() {
    menuOpen = false;
    const menu = document.getElementById("mobile-menu");
    if (menu) menu.style.display = "none";
  }
</script> -->
